/*
 * Tasks Hub
 *
 * This is a sample Tasks Hub Server based on the OpenAPI 3.0 specification.  Some useful links: - [The Tasks Hub repository](https://github.com/vbelouso/tasks) - [The source API definition](https://github.com/vbelouso/tasks/api/openapi-spec/v1/openapi.yaml)
 *
 * API version: 1.0.11
 * Contact: fake@msbang.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package tasks

import (
	"context"
	"errors"
	"fmt"
	"net/http"
)

// TasksApiService is a service that implements the logic for the TasksApiServicer
// This service should implement the business logic for every endpoint for the TasksApi API.
// Include any external packages or services that will be required by this service.
type TasksApiService struct {
}

// NewTasksApiService creates a default api service
func NewTasksApiService() TasksApiServicer {
	return &TasksApiService{}
}

// AddTask - Add a new task
func (s *TasksApiService) AddTask(ctx context.Context, taskRequest TaskRequest) (ImplResponse, error) {
	// TODO - update AddTask with the required logic for this service method.
	// Add api_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, TaskResponse{}) or use other options such as http.Ok ...
	//return Response(201, TaskResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, GetTasksDefaultResponse{}) or use other options such as http.Ok ...
	//return Response(0, GetTasksDefaultResponse{}), nil
	fmt.Println("Check")
	return Response(http.StatusNotImplemented, nil), errors.New("AddTask method not implemented")
}

// DeleteTask - Deletes a task
func (s *TasksApiService) DeleteTask(ctx context.Context, taskId int64) (ImplResponse, error) {
	// TODO - update DeleteTask with the required logic for this service method.
	// Add api_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(0, GetTasksDefaultResponse{}) or use other options such as http.Ok ...
	//return Response(0, GetTasksDefaultResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteTask method not implemented")
}

// FindTasksByStatus - Find tasks by status
func (s *TasksApiService) FindTasksByStatus(ctx context.Context, status string) (ImplResponse, error) {
	// TODO - update FindTasksByStatus with the required logic for this service method.
	// Add api_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []TaskResponse{}) or use other options such as http.Ok ...
	//return Response(200, []TaskResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, GetTasksDefaultResponse{}) or use other options such as http.Ok ...
	//return Response(0, GetTasksDefaultResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FindTasksByStatus method not implemented")
}

// GetTaskById - Find task by ID
func (s *TasksApiService) GetTaskById(ctx context.Context, taskId int64) (ImplResponse, error) {
	// TODO - update GetTaskById with the required logic for this service method.
	// Add api_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, TaskResponse{}) or use other options such as http.Ok ...
	//return Response(200, TaskResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, GetTasksDefaultResponse{}) or use other options such as http.Ok ...
	//return Response(0, GetTasksDefaultResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTaskById method not implemented")
}

// GetTasks - Retrieves all tasks
func (s *TasksApiService) GetTasks(ctx context.Context, page int32, size int32) (ImplResponse, error) {
	// TODO - update GetTasks with the required logic for this service method.
	// Add api_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetTasks200Response{}) or use other options such as http.Ok ...
	//return Response(200, GetTasks200Response{}), nil

	//TODO: Uncomment the next line to return response Response(0, GetTasksDefaultResponse{}) or use other options such as http.Ok ...
	//return Response(0, GetTasksDefaultResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTasks method not implemented")
}

// UpdateTask - Updates an existing task
func (s *TasksApiService) UpdateTask(ctx context.Context, taskId int64, taskRequest TaskRequest) (ImplResponse, error) {
	// TODO - update UpdateTask with the required logic for this service method.
	// Add api_tasks_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, UpdateTask200Response{}) or use other options such as http.Ok ...
	//return Response(200, UpdateTask200Response{}), nil

	//TODO: Uncomment the next line to return response Response(0, GetTasksDefaultResponse{}) or use other options such as http.Ok ...
	//return Response(0, GetTasksDefaultResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateTask method not implemented")
}
